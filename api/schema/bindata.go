// Code generated by go-bindata.
// sources:
// api/schema/input/DirectoryCreateInput.graphql
// api/schema/input/DirectoryUpdateInput.graphql
// api/schema/input/PageCreateInput.graphql
// api/schema/input/PageFieldCreateInput.graphql
// api/schema/input/PageFieldRemoveInput.graphql
// api/schema/input/PageFieldRenameInput.graphql
// api/schema/input/PageFieldUpdate2Input.graphql
// api/schema/input/PageFieldUpdate2InputPartial.graphql
// api/schema/input/PageFieldUpdateInput.graphql
// api/schema/input/PageUpdateInput.graphql
// api/schema/input/TemplateCreateInput.graphql
// api/schema/input/TemplateFieldCreateInput.graphql
// api/schema/input/TemplateFieldRemoveInput.graphql
// api/schema/input/TemplateUpdateInput.graphql
// api/schema/input/UserCreateInput.graphql
// api/schema/input/UserUpdateInput.graphql
// api/schema/mutation.graphql
// api/schema/query.graphql
// api/schema/schema.graphql
// api/schema/type/Directory.graphql
// api/schema/type/LoginResult.graphql
// api/schema/type/Page.graphql
// api/schema/type/PageField.graphql
// api/schema/type/PageFieldOperationResult.graphql
// api/schema/type/PageOperationResult.graphql
// api/schema/type/PageRemoveResult.graphql
// api/schema/type/Template.graphql
// api/schema/type/TemplateField.graphql
// api/schema/type/TemplateRemoveResult.graphql
// api/schema/type/TemplateUpdateResult.graphql
// api/schema/type/User.graphql
// api/schema/type/UserError.graphql
// api/schema/type/UserOperationResult.graphql
// api/schema/type/UserRemoveResult.graphql
// api/schema/type/VerifyTokenResult.graphql
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiSchemaInputDirectorycreateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc8\x31\x0e\xc2\x30\x0c\x05\xd0\xdd\xa7\xf8\x5c\x23\x23\x64\xc9\x86\xc4\x09\x0c\xb1\xc0\x52\x70\x22\xc7\x19\xaa\xaa\x77\xaf\xd4\xf5\xa9\x8d\x15\xc8\xea\xf2\x89\xee\xdb\xc3\x85\x43\xca\x85\x3b\x01\xc6\x7f\x49\x78\x85\xab\x7d\x6f\x04\x0c\x76\xb1\x28\x35\xa1\x64\x02\x74\x3e\xd7\xbb\xe9\xfc\x49\x4d\xb8\xf7\xde\x84\x8d\x0e\x3a\x03\x00\x00\xff\xff\xb6\x5a\x8b\x56\x55\x00\x00\x00")

func apiSchemaInputDirectorycreateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputDirectorycreateinputGraphql,
		"api/schema/input/DirectoryCreateInput.graphql",
	)
}

func apiSchemaInputDirectorycreateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputDirectorycreateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/DirectoryCreateInput.graphql", size: 85, mode: os.FileMode(436), modTime: time.Unix(1539642901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputDirectoryupdateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc8\x31\x0a\xc3\x30\x0c\x05\xd0\x5d\xa7\xf8\xe7\xf0\x58\xbc\x78\x2b\x94\x1e\x40\xad\x45\x2b\x70\x64\x23\xcb\x43\x08\xb9\x7b\x20\xeb\x53\x1b\x2b\x90\xd5\xe5\x1b\xdd\xf7\xf7\xa8\x1c\x52\x6e\x3c\x08\x30\xde\x24\xe1\x15\xae\xf6\x23\x60\xb0\x8b\x45\xa9\x09\x25\x13\xa0\xf3\xb9\x3e\x4d\xe7\x5f\x6a\xc2\xa3\xf7\x26\x6c\x74\xd2\x15\x00\x00\xff\xff\x1e\x2d\xb0\x47\x54\x00\x00\x00")

func apiSchemaInputDirectoryupdateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputDirectoryupdateinputGraphql,
		"api/schema/input/DirectoryUpdateInput.graphql",
	)
}

func apiSchemaInputDirectoryupdateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputDirectoryupdateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/DirectoryUpdateInput.graphql", size: 84, mode: os.FileMode(436), modTime: time.Unix(1539642926, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputPagecreateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x31\x0a\x02\x31\x10\x05\xd0\x7e\x4e\xf1\xbd\x46\x4a\x15\x21\xdd\x82\xa5\x58\x8c\xe4\xbb\x0e\xc4\xd9\x25\x99\xad\xc4\xbb\x4b\xac\xb6\x7c\xcd\x33\x5f\xb7\xc0\xa4\x33\x4f\x8d\x1a\xcc\x7f\x7f\x04\x70\x7d\x33\xe1\x1a\xcd\x7c\x3e\x08\xb0\x6a\xa3\x47\x2e\x09\xf9\x3c\x6c\x7d\xda\x1e\xd5\xfa\x8b\x25\xe1\xb8\x2c\x95\xea\x02\x3c\x8d\xb5\xf4\x84\xdb\x38\x2f\x03\xbb\xf8\x2e\x5f\xf9\x05\x00\x00\xff\xff\xae\x72\x99\x2c\x72\x00\x00\x00")

func apiSchemaInputPagecreateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputPagecreateinputGraphql,
		"api/schema/input/PageCreateInput.graphql",
	)
}

func apiSchemaInputPagecreateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputPagecreateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/PageCreateInput.graphql", size: 114, mode: os.FileMode(436), modTime: time.Unix(1539643295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputPagefieldcreateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x48\x4c\x4f\x75\xcb\x4c\xcd\x49\x71\x2e\x4a\x4d\x2c\x49\xf5\x04\x0b\x56\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x2b\x72\x29\x28\x94\x54\x16\xa0\xf0\xcb\x12\x73\x4a\x91\x04\x6a\xb9\x00\x01\x00\x00\xff\xff\xd4\x6e\x12\xe6\x50\x00\x00\x00")

func apiSchemaInputPagefieldcreateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputPagefieldcreateinputGraphql,
		"api/schema/input/PageFieldCreateInput.graphql",
	)
}

func apiSchemaInputPagefieldcreateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputPagefieldcreateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/PageFieldCreateInput.graphql", size: 80, mode: os.FileMode(436), modTime: time.Unix(1539643332, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputPagefieldremoveinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x48\x4c\x4f\x75\xcb\x4c\xcd\x49\x09\x4a\xcd\xcd\x2f\x4b\xf5\x04\x0b\x56\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x2b\x72\xd5\x72\x01\x02\x00\x00\xff\xff\xa8\xb5\xf2\x98\x2f\x00\x00\x00")

func apiSchemaInputPagefieldremoveinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputPagefieldremoveinputGraphql,
		"api/schema/input/PageFieldRemoveInput.graphql",
	)
}

func apiSchemaInputPagefieldremoveinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputPagefieldremoveinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/PageFieldRemoveInput.graphql", size: 47, mode: os.FileMode(436), modTime: time.Unix(1539643446, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputPagefieldrenameinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x48\x4c\x4f\x75\xcb\x4c\xcd\x49\x09\x4a\xcd\x4b\xcc\x4d\xf5\x04\x0b\x56\x73\x29\x28\x80\x78\x56\x0a\xc1\x25\x45\x99\x79\xe9\x8a\x5c\x0a\x0a\x45\x60\xf9\x90\x7c\x84\x58\x2d\x17\x20\x00\x00\xff\xff\x42\xeb\xd3\xef\x43\x00\x00\x00")

func apiSchemaInputPagefieldrenameinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputPagefieldrenameinputGraphql,
		"api/schema/input/PageFieldRenameInput.graphql",
	)
}

func apiSchemaInputPagefieldrenameinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputPagefieldrenameinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/PageFieldRenameInput.graphql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1539643357, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputPagefieldupdate2inputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x48\x4c\x4f\x75\xcb\x4c\xcd\x49\x09\x2d\x48\x49\x2c\x49\x35\xf2\x04\x8b\x56\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x2b\x72\x29\x28\x94\x82\x15\x58\x61\xd7\x11\x90\x58\x54\x92\x99\x98\xa3\xc8\x55\xcb\x05\x08\x00\x00\xff\xff\x4a\x46\x6c\x15\x58\x00\x00\x00")

func apiSchemaInputPagefieldupdate2inputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputPagefieldupdate2inputGraphql,
		"api/schema/input/PageFieldUpdate2Input.graphql",
	)
}

func apiSchemaInputPagefieldupdate2inputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputPagefieldupdate2inputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/PageFieldUpdate2Input.graphql", size: 88, mode: os.FileMode(436), modTime: time.Unix(1539643401, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputPagefieldupdate2inputpartialGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x48\x4c\x4f\x75\xcb\x4c\xcd\x49\x09\x2d\x48\x49\x2c\x49\x35\xf2\x04\x89\x06\x24\x16\x95\x64\x26\xe6\x28\x54\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x73\x29\x28\x94\x25\xe6\x94\x22\xf8\xb5\x5c\x80\x00\x00\x00\xff\xff\xfb\x26\xce\xd1\x46\x00\x00\x00")

func apiSchemaInputPagefieldupdate2inputpartialGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputPagefieldupdate2inputpartialGraphql,
		"api/schema/input/PageFieldUpdate2InputPartial.graphql",
	)
}

func apiSchemaInputPagefieldupdate2inputpartialGraphql() (*asset, error) {
	bytes, err := apiSchemaInputPagefieldupdate2inputpartialGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/PageFieldUpdate2InputPartial.graphql", size: 70, mode: os.FileMode(436), modTime: time.Unix(1539643427, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputPagefieldupdateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x48\x4c\x4f\x75\xcb\x4c\xcd\x49\x09\x2d\x48\x49\x2c\x49\xf5\x04\x0b\x56\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x2b\x72\x29\x28\x94\x25\xe6\x94\x22\x09\xd4\x72\x01\x02\x00\x00\xff\xff\x35\xbe\xf9\x74\x40\x00\x00\x00")

func apiSchemaInputPagefieldupdateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputPagefieldupdateinputGraphql,
		"api/schema/input/PageFieldUpdateInput.graphql",
	)
}

func apiSchemaInputPagefieldupdateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputPagefieldupdateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/PageFieldUpdateInput.graphql", size: 64, mode: os.FileMode(436), modTime: time.Unix(1539643379, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputPageupdateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\xb1\x0a\x02\x31\x0c\x06\xe0\x3d\x4f\xf1\xfb\x0a\x8e\x1d\x45\x84\x6e\x07\xe2\x24\x0e\x91\xc6\x1a\xa8\xb9\x72\x49\x27\xf1\xdd\xe5\xce\xc5\xf1\x9b\x3e\xb5\x3e\x02\x13\x57\xb9\xf4\xc2\x21\x79\xf3\x9b\x00\xe3\x97\x24\x9c\x63\x51\xab\x04\x78\x1b\xf5\x8f\x9d\x17\xb1\xc8\x25\x21\x1f\x09\x50\x9f\xc6\xbd\xa9\x3f\xa5\x24\x1c\xe6\xb9\x09\x1b\x01\x0f\x95\x56\x3c\xe1\xba\x06\xa7\x15\xbf\x65\xbf\x35\xbb\x1b\x7d\xe8\x1b\x00\x00\xff\xff\xd7\x05\x76\x47\x81\x00\x00\x00")

func apiSchemaInputPageupdateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputPageupdateinputGraphql,
		"api/schema/input/PageUpdateInput.graphql",
	)
}

func apiSchemaInputPageupdateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputPageupdateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/PageUpdateInput.graphql", size: 129, mode: os.FileMode(436), modTime: time.Unix(1539643313, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputTemplatecreateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x49\xcd\x2d\xc8\x49\x2c\x49\x75\x2e\x4a\x4d\x2c\x49\xf5\x04\x8b\x55\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x2b\x72\x29\x28\xa4\x65\xa6\xe6\xa4\x14\x5b\x29\x44\xc3\x34\xb8\x81\x04\x90\x74\x29\xc6\x72\xd5\x72\x01\x02\x00\x00\xff\xff\xfa\x6e\x0c\x4f\x54\x00\x00\x00")

func apiSchemaInputTemplatecreateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputTemplatecreateinputGraphql,
		"api/schema/input/TemplateCreateInput.graphql",
	)
}

func apiSchemaInputTemplatecreateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputTemplatecreateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/TemplateCreateInput.graphql", size: 84, mode: os.FileMode(436), modTime: time.Unix(1539643079, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputTemplatefieldcreateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x49\xcd\x2d\xc8\x49\x2c\x49\x75\xcb\x4c\xcd\x49\x71\x2e\x4a\x4d\x2c\x49\xf5\x04\x4b\x54\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x2b\x72\x29\x28\x94\x54\x16\x20\xf1\x6b\xb9\x00\x01\x00\x00\xff\xff\xf0\x73\xf9\x05\x43\x00\x00\x00")

func apiSchemaInputTemplatefieldcreateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputTemplatefieldcreateinputGraphql,
		"api/schema/input/TemplateFieldCreateInput.graphql",
	)
}

func apiSchemaInputTemplatefieldcreateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputTemplatefieldcreateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/TemplateFieldCreateInput.graphql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1539643132, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputTemplatefieldremoveinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x49\xcd\x2d\xc8\x49\x2c\x49\x75\xcb\x4c\xcd\x49\x09\x4a\xcd\xcd\x2f\x4b\xf5\x04\x4b\x54\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x2b\x72\xd5\x72\x01\x02\x00\x00\xff\xff\xc3\x78\x6d\x24\x33\x00\x00\x00")

func apiSchemaInputTemplatefieldremoveinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputTemplatefieldremoveinputGraphql,
		"api/schema/input/TemplateFieldRemoveInput.graphql",
	)
}

func apiSchemaInputTemplatefieldremoveinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputTemplatefieldremoveinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/TemplateFieldRemoveInput.graphql", size: 51, mode: os.FileMode(436), modTime: time.Unix(1539643153, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputTemplateupdateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x49\xcd\x2d\xc8\x49\x2c\x49\x0d\x2d\x48\x49\x2c\x49\xf5\x04\x8b\x55\x73\x29\x28\xe4\x25\xe6\xa6\x5a\x29\x04\x97\x14\x65\xe6\xa5\x2b\x72\xd5\x72\x01\x02\x00\x00\xff\xff\x48\x99\x6a\xed\x2e\x00\x00\x00")

func apiSchemaInputTemplateupdateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputTemplateupdateinputGraphql,
		"api/schema/input/TemplateUpdateInput.graphql",
	)
}

func apiSchemaInputTemplateupdateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputTemplateupdateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/TemplateUpdateInput.graphql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1539643113, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputUsercreateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x2d\x4e\x2d\x72\x2e\x4a\x4d\x2c\x49\xf5\x04\xf3\xab\xb9\x14\x14\x52\x73\x13\x33\x73\xac\x14\x82\x4b\x8a\x32\xf3\xd2\x15\xb9\x14\x14\x0a\x12\x8b\x8b\xcb\xf3\x8b\x52\x60\x62\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xcd\x0f\x73\xa0\x3e\x00\x00\x00")

func apiSchemaInputUsercreateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputUsercreateinputGraphql,
		"api/schema/input/UserCreateInput.graphql",
	)
}

func apiSchemaInputUsercreateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputUsercreateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/UserCreateInput.graphql", size: 62, mode: os.FileMode(436), modTime: time.Unix(1539643557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaInputUserupdateinputGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2b\x28\x2d\x51\x08\x2d\x4e\x2d\x0a\x2d\x48\x49\x2c\x49\xf5\x04\xf3\xab\xb9\x14\x14\x32\x8b\x1d\x93\x4b\x32\xcb\x52\xad\x14\x9c\xf2\xf3\x73\x52\x13\xf3\xb8\x14\x14\x52\x73\x13\x33\x73\xac\x14\x82\x4b\x8a\x32\xf3\xd2\xb9\x6a\xb9\x00\x01\x00\x00\xff\xff\x6c\x56\x97\x94\x3e\x00\x00\x00")

func apiSchemaInputUserupdateinputGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaInputUserupdateinputGraphql,
		"api/schema/input/UserUpdateInput.graphql",
	)
}

func apiSchemaInputUserupdateinputGraphql() (*asset, error) {
	bytes, err := apiSchemaInputUserupdateinputGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/input/UserUpdateInput.graphql", size: 62, mode: os.FileMode(436), modTime: time.Unix(1539643573, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaMutationGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcd\x6e\xb3\x30\x10\xbc\xfb\x29\x96\x1b\x91\xf2\x04\x1c\xbf\x2f\xaa\x14\xa9\x55\x23\x9a\xf4\x52\xf5\x60\x85\x2d\xb5\x0a\x36\x32\x26\x55\x54\xf5\xdd\x2b\xdb\x60\x8c\x4d\x52\xd2\x1b\xde\x9f\xd9\x99\xf1\x62\x75\x6e\x10\x1e\x3a\x45\x15\x13\x1c\xbe\x08\xc0\x51\x22\x55\xb8\x61\x12\x8f\x4a\xc8\x73\xca\x78\xd3\xa9\x0c\x5c\xe0\xbf\xc9\x6f\x75\x34\x59\x79\x71\x02\xd0\x35\xc5\xb4\xb5\xc8\x60\xbb\x49\xd6\x10\x62\x1c\x4c\xe1\x2c\x86\xc4\x5a\x9c\x62\x8c\x55\x06\xff\x84\xa8\x90\xf2\x84\x38\x92\x7b\xac\x9b\x8a\x2a\x1c\x38\x0e\xe7\x80\xe2\x10\x26\x00\xaa\xff\xb4\x04\x22\x82\xfb\x49\x3a\x02\xb0\xe1\x1c\xdb\xae\x52\x11\x89\x3b\x86\x55\x91\x12\x00\x80\x1e\xd6\x7e\x4f\x91\x4d\x95\xcf\x8f\x00\x5c\x9e\x60\xcd\xf8\xc3\x84\xdc\x34\xde\x3c\xc1\x73\x7b\x08\x59\xa4\xbe\xde\x89\xde\xd1\xd2\xb9\xae\xbf\x03\xc7\x75\xe8\xb1\x41\x69\xb6\x2a\xf0\x4b\xe7\xae\x2b\x71\x15\xb1\x4f\x2e\x15\xa3\x4b\xe4\xb4\xbe\x05\x3d\x37\x0d\x0b\xd1\xed\x6a\x1b\xd9\xd7\x80\xbd\xc5\x31\x29\x5a\x14\x06\xb0\xcd\xe0\x65\x56\xd6\xab\x29\xb3\xb7\xe0\x2a\x9f\x94\x64\xbc\x34\xb9\x0b\x66\x4e\x18\x2d\xd4\xeb\x2f\xf5\x02\x37\x35\xa3\x9b\xdc\x0c\x37\x6e\x11\xba\xb7\x71\xfa\x18\x6d\xdb\x3b\xe5\x25\x1e\x5a\x94\x3b\xda\xb6\x9f\x42\x16\xe3\x3f\xdb\xf4\x91\x0c\x7a\xbf\xfc\x37\x62\xd8\x36\xdd\x9a\xfa\x84\x75\x20\xd8\x2b\x80\x16\x79\xb1\xe5\x27\x66\x9f\x41\x07\x63\x75\xe8\x8e\x40\x42\xe2\x34\x18\xfc\x51\x83\x3e\xfa\x1a\x12\x77\x51\x7e\xe1\xda\x27\x13\xbc\x35\x17\xa7\xb5\xa8\x26\x3e\x28\xf1\x81\xdc\x69\xff\xd5\x0e\x2d\xd1\xef\xcf\x35\xe0\x5e\x63\xa4\x58\x53\x56\xcd\xb6\x11\x80\x4a\x94\x2c\x2c\x99\x1f\x76\xaf\x2b\x47\xc6\x27\x94\xec\xed\x6c\x27\x4c\xb9\xae\x32\x78\x1e\x93\xfd\x65\x7f\x93\x9f\x00\x00\x00\xff\xff\xaa\x46\x62\xc4\x8b\x06\x00\x00")

func apiSchemaMutationGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaMutationGraphql,
		"api/schema/mutation.graphql",
	)
}

func apiSchemaMutationGraphql() (*asset, error) {
	bytes, err := apiSchemaMutationGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/mutation.graphql", size: 1675, mode: os.FileMode(436), modTime: time.Unix(1539645580, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaQueryGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\x48\x4f\x2d\x71\xc9\x2c\x4a\x4d\x2e\xc9\x2f\xaa\xd4\xc8\x4c\xb1\x52\xf0\x74\x51\xd4\xb4\x52\x80\x8b\xa1\x2a\xc9\x4c\x2d\xb6\x52\x88\x86\x4b\xc6\x42\x64\x83\xf2\xf3\x71\xab\xe0\x52\x50\x28\x49\xcd\x2d\xc8\x49\x2c\x49\x45\x32\x3f\x04\x2a\x84\x24\x0b\xd2\x07\x13\x06\x6b\x2b\x48\x4c\x47\xd6\x12\x90\x98\x9e\x0a\x12\x2e\x2d\x4e\x2d\x42\x12\x0e\x2d\x4e\x2d\x82\x8a\x82\x4c\x00\x71\x63\xb9\x6a\xb9\x00\x01\x00\x00\xff\xff\x60\x89\xc2\x36\xe7\x00\x00\x00")

func apiSchemaQueryGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaQueryGraphql,
		"api/schema/query.graphql",
	)
}

func apiSchemaQueryGraphql() (*asset, error) {
	bytes, err := apiSchemaQueryGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/query.graphql", size: 231, mode: os.FileMode(436), modTime: time.Unix(1539642715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaSchemaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\xce\x48\xcd\x4d\x54\xa8\xe6\x52\x50\x28\x2c\x4d\x2d\xaa\xb4\x52\x08\x04\x51\x5c\x0a\x0a\xb9\xa5\x25\x89\x25\x99\xf9\x79\x56\x0a\xbe\x50\x16\x57\x2d\x17\x20\x00\x00\xff\xff\x1f\x5d\x4a\xc1\x2f\x00\x00\x00")

func apiSchemaSchemaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaSchemaGraphql,
		"api/schema/schema.graphql",
	)
}

func apiSchemaSchemaGraphql() (*asset, error) {
	bytes, err := apiSchemaSchemaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/schema.graphql", size: 47, mode: os.FileMode(436), modTime: time.Unix(1539642643, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeDirectoryGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcd\xb1\x0a\xc2\x30\x10\xc6\xf1\x3d\x4f\xf1\xf9\x1a\xb7\x29\x5d\xdc\x0a\x8e\xa5\x43\x6c\x3e\xda\x40\x4c\xc2\xe5\x3a\x14\xf1\xdd\xa5\x1d\x54\x70\xbc\x3f\xc7\xef\xb3\xad\x12\x5d\x54\x4e\x56\x74\xc3\xd3\x01\x31\x08\xae\xdd\xc9\x01\x93\xd2\x1b\xc3\xd9\x04\x37\xd3\x98\xe7\x3d\xae\x35\xfc\xc7\xec\x1f\xfc\xbd\xab\x57\x66\x93\xaf\xbc\xbb\xad\x5f\xef\x29\xb6\x85\x41\x70\x29\x25\xd1\xe7\x63\x65\x89\x29\x28\xb3\x60\xf8\xbc\x8f\x87\x31\xb3\x09\x86\xde\xcf\x1c\xdd\xcb\xbd\x03\x00\x00\xff\xff\xe2\x6c\x42\x2c\xab\x00\x00\x00")

func apiSchemaTypeDirectoryGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeDirectoryGraphql,
		"api/schema/type/Directory.graphql",
	)
}

func apiSchemaTypeDirectoryGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeDirectoryGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/Directory.graphql", size: 171, mode: os.FileMode(436), modTime: time.Unix(1539645011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeLoginresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\xf0\xc9\x4f\xcf\xcc\x0b\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x28\xc9\xcf\x4e\xcd\xb3\x52\x08\x2e\x29\xca\xcc\x4b\xe7\x52\x50\x28\x2d\x4e\x2d\xb2\x52\x08\x2d\x4e\x2d\xe2\xaa\xe5\x02\x04\x00\x00\xff\xff\xac\xd3\x77\x88\x32\x00\x00\x00")

func apiSchemaTypeLoginresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeLoginresultGraphql,
		"api/schema/type/LoginResult.graphql",
	)
}

func apiSchemaTypeLoginresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeLoginresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/LoginResult.graphql", size: 50, mode: os.FileMode(436), modTime: time.Unix(1539643603, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypePageGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcd\xb1\x0a\xc2\x30\x14\x85\xe1\x3d\x4f\x71\xfa\x1a\xd9\x94\x22\xb8\x15\x1c\xc5\x21\x36\xc7\x78\x21\x26\x21\xb9\x19\x8a\xf8\xee\x92\xad\xd0\xf1\xff\x96\x5f\xb7\x42\x2c\x2e\x10\x5f\x03\x88\xb7\xb8\xce\x93\x01\xd6\x4a\xa7\xf4\x27\xb5\xb8\x69\x95\x14\x06\xf6\xe2\x8f\x98\xdc\x87\xfb\x6e\xb1\x87\x7d\x4b\x5b\xfa\x33\x4a\x7b\xd3\x5b\x9c\x73\x8e\x74\x69\xf8\x4b\x18\x7d\xb3\xb8\x8f\xfb\x65\xc4\xc3\x00\xc5\x55\x26\xb5\x98\xa5\x72\xd5\x5c\xb7\xc9\xfc\xcc\x3f\x00\x00\xff\xff\x6f\x1b\xa7\x16\xa5\x00\x00\x00")

func apiSchemaTypePageGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypePageGraphql,
		"api/schema/type/Page.graphql",
	)
}

func apiSchemaTypePageGraphql() (*asset, error) {
	bytes, err := apiSchemaTypePageGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/Page.graphql", size: 165, mode: os.FileMode(436), modTime: time.Unix(1539643181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypePagefieldGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x48\x4c\x4f\x75\xcb\x4c\xcd\x49\x51\xa8\xe6\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\x52\x50\x00\x29\x41\xe6\x97\x25\xe6\x94\xc2\x05\xb8\x6a\xb9\x00\x01\x00\x00\xff\xff\x33\x90\xa2\xd7\x43\x00\x00\x00")

func apiSchemaTypePagefieldGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypePagefieldGraphql,
		"api/schema/type/PageField.graphql",
	)
}

func apiSchemaTypePagefieldGraphql() (*asset, error) {
	bytes, err := apiSchemaTypePagefieldGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/PageField.graphql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1539643199, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypePagefieldoperationresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x48\x4c\x4f\x75\xcb\x4c\xcd\x49\xf1\x2f\x48\x2d\x4a\x2c\xc9\xcc\xcf\x0b\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x28\x2d\x4e\x2d\x72\x2d\x2a\xca\x2f\x2a\xb6\x52\x88\x0e\x85\x71\x62\xb9\x14\x14\x0a\x12\xd3\x53\xad\xc0\x9a\xb9\x6a\xb9\x00\x01\x00\x00\xff\xff\xb8\x31\x7d\x76\x49\x00\x00\x00")

func apiSchemaTypePagefieldoperationresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypePagefieldoperationresultGraphql,
		"api/schema/type/PageFieldOperationResult.graphql",
	)
}

func apiSchemaTypePagefieldoperationresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypePagefieldoperationresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/PageFieldOperationResult.graphql", size: 73, mode: os.FileMode(436), modTime: time.Unix(1539643269, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypePageoperationresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x48\x4c\x4f\xf5\x2f\x48\x2d\x4a\x2c\xc9\xcc\xcf\x0b\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x28\x2d\x4e\x2d\x72\x2d\x2a\xca\x2f\x2a\xb6\x52\x88\x0e\x85\x71\x62\xb9\x14\x14\x0a\x12\xd3\x53\xad\xc0\xfa\xb8\x6a\xb9\x00\x01\x00\x00\xff\xff\x80\x0f\xb8\xe8\x44\x00\x00\x00")

func apiSchemaTypePageoperationresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypePageoperationresultGraphql,
		"api/schema/type/PageOperationResult.graphql",
	)
}

func apiSchemaTypePageoperationresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypePageoperationresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/PageOperationResult.graphql", size: 68, mode: os.FileMode(436), modTime: time.Unix(1539643222, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypePageremoveresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x48\x4c\x4f\x0d\x4a\xcd\xcd\x2f\x4b\x0d\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x28\x02\x0b\xa4\xf8\x27\x65\xa5\x26\x97\x78\xa6\x58\x29\x78\xba\x28\x72\xd5\x72\x01\x02\x00\x00\xff\xff\x95\x3c\xa9\xf7\x31\x00\x00\x00")

func apiSchemaTypePageremoveresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypePageremoveresultGraphql,
		"api/schema/type/PageRemoveResult.graphql",
	)
}

func apiSchemaTypePageremoveresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypePageremoveresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/PageRemoveResult.graphql", size: 49, mode: os.FileMode(436), modTime: time.Unix(1539643248, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeTemplateGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x49\xcd\x2d\xc8\x49\x2c\x49\x55\xa8\xe6\x52\x50\xc8\x4c\xb1\x52\xf0\x74\x51\xe4\x52\x50\x48\x2e\x4a\x4d\x2c\x49\x4d\x71\x2c\xb1\x52\x08\x2e\x29\xca\xcc\x4b\x07\x09\x96\x16\xa4\x60\x0a\xe6\x25\xe6\xa6\x22\xf3\xd3\x32\x53\x73\x52\x8a\xad\x14\xa2\x61\x26\xbb\x81\x04\x62\xb9\x6a\xb9\x00\x01\x00\x00\xff\xff\xde\xd7\x42\x03\x70\x00\x00\x00")

func apiSchemaTypeTemplateGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeTemplateGraphql,
		"api/schema/type/Template.graphql",
	)
}

func apiSchemaTypeTemplateGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeTemplateGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/Template.graphql", size: 112, mode: os.FileMode(436), modTime: time.Unix(1539642949, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeTemplatefieldGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x49\xcd\x2d\xc8\x49\x2c\x49\x75\xcb\x4c\xcd\x49\x51\xa8\xe6\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\x52\x50\x00\x29\x43\xf0\x6b\xb9\x00\x01\x00\x00\xff\xff\x80\x8e\xa0\xa9\x37\x00\x00\x00")

func apiSchemaTypeTemplatefieldGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeTemplatefieldGraphql,
		"api/schema/type/TemplateField.graphql",
	)
}

func apiSchemaTypeTemplatefieldGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeTemplatefieldGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/TemplateField.graphql", size: 55, mode: os.FileMode(436), modTime: time.Unix(1539642990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeTemplateremoveresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x49\xcd\x2d\xc8\x49\x2c\x49\x0d\x4a\xcd\xcd\x2f\x4b\x0d\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x28\x2d\x4e\x2d\x72\x2d\x2a\xca\x2f\x2a\xb6\x52\x88\x0e\x85\x71\x62\xb9\x14\x14\x8a\xc0\x4a\x53\xfc\x93\xb2\x52\x93\x4b\x3c\x53\xac\x14\x3c\x5d\xb8\x6a\xb9\x00\x01\x00\x00\xff\xff\x38\x03\xd3\xd2\x4e\x00\x00\x00")

func apiSchemaTypeTemplateremoveresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeTemplateremoveresultGraphql,
		"api/schema/type/TemplateRemoveResult.graphql",
	)
}

func apiSchemaTypeTemplateremoveresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeTemplateremoveresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/TemplateRemoveResult.graphql", size: 78, mode: os.FileMode(436), modTime: time.Unix(1539643046, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeTemplateupdateresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x49\xcd\x2d\xc8\x49\x2c\x49\x0d\x2d\x48\x49\x2c\x49\x0d\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x28\x2d\x4e\x2d\x72\x2d\x2a\xca\x2f\x2a\xb6\x52\x88\x0e\x85\x71\x62\xb9\x14\x14\x4a\xa0\x5a\xac\xe0\x9a\xb9\x6a\xb9\x00\x01\x00\x00\xff\xff\x91\x6b\x68\x1a\x4d\x00\x00\x00")

func apiSchemaTypeTemplateupdateresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeTemplateupdateresultGraphql,
		"api/schema/type/TemplateUpdateResult.graphql",
	)
}

func apiSchemaTypeTemplateupdateresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeTemplateupdateresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/TemplateUpdateResult.graphql", size: 77, mode: os.FileMode(436), modTime: time.Unix(1539643017, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeUserGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x2d\x4e\x2d\x52\xa8\xe6\x52\x50\xc8\x4c\xb1\x52\xf0\x74\x51\xe4\x52\x50\x48\x2e\x4a\x4d\x2c\x49\x4d\x71\x2c\xb1\x52\x08\x2e\x29\xca\xcc\x4b\x07\x09\x96\x16\xa4\x60\x0a\xa6\xe6\x26\x66\xe6\x20\x0b\x64\x16\x3b\x26\x97\x64\x96\xa5\x5a\x29\x38\xe5\xe7\xe7\xa4\x26\xe6\x29\x72\xd5\x72\x01\x02\x00\x00\xff\xff\xaf\x46\xb7\x59\x68\x00\x00\x00")

func apiSchemaTypeUserGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeUserGraphql,
		"api/schema/type/User.graphql",
	)
}

func apiSchemaTypeUserGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeUserGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/User.graphql", size: 104, mode: os.FileMode(436), modTime: time.Unix(1539643482, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeUsererrorGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x2d\x4e\x2d\x72\x2d\x2a\xca\x2f\x52\xa8\xe6\x52\x50\x48\xcb\x4c\xcd\x49\xb1\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\x52\x50\xc8\x4d\x2d\x2e\x4e\x4c\x4f\x45\x08\xd5\x72\x01\x02\x00\x00\xff\xff\x60\xe8\x22\x36\x37\x00\x00\x00")

func apiSchemaTypeUsererrorGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeUsererrorGraphql,
		"api/schema/type/UserError.graphql",
	)
}

func apiSchemaTypeUsererrorGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeUsererrorGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/UserError.graphql", size: 55, mode: os.FileMode(436), modTime: time.Unix(1539642843, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeUseroperationresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x2d\x4e\x2d\xf2\x2f\x48\x2d\x4a\x2c\xc9\xcc\xcf\x0b\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x48\x2d\x2a\xca\x2f\x2a\xb6\x52\x88\x06\x29\x70\x05\x71\x14\x63\x15\xb9\x14\x14\x4a\x8b\x53\x8b\xac\xc0\xba\xb8\x6a\xb9\x00\x01\x00\x00\xff\xff\x12\xc6\x5d\xbf\x42\x00\x00\x00")

func apiSchemaTypeUseroperationresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeUseroperationresultGraphql,
		"api/schema/type/UserOperationResult.graphql",
	)
}

func apiSchemaTypeUseroperationresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeUseroperationresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/UserOperationResult.graphql", size: 66, mode: os.FileMode(436), modTime: time.Unix(1539643502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeUserremoveresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x2d\x4e\x2d\x0a\x4a\xcd\xcd\x2f\x4b\x0d\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x28\x02\x0b\xa4\xf8\x27\x65\xa5\x26\x97\x78\xa6\x58\x29\x78\xba\x70\xd5\x72\x01\x02\x00\x00\xff\xff\x18\x80\x9b\x51\x30\x00\x00\x00")

func apiSchemaTypeUserremoveresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeUserremoveresultGraphql,
		"api/schema/type/UserRemoveResult.graphql",
	)
}

func apiSchemaTypeUserremoveresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeUserremoveresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/UserRemoveResult.graphql", size: 48, mode: os.FileMode(436), modTime: time.Unix(1539643520, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiSchemaTypeVerifytokenresultGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa9\x2c\x48\x55\x08\x4b\x2d\xca\x4c\xab\x0c\xc9\xcf\x4e\xcd\x0b\x4a\x2d\x2e\xcd\x29\x51\xa8\xe6\x52\x50\x28\x02\x33\xad\x14\x9c\xf2\xf3\x73\x52\x13\xf3\x14\xb9\x14\x14\x4a\x8b\x53\x8b\xac\x14\x42\x8b\x53\x8b\xb8\x6a\xb9\x00\x01\x00\x00\xff\xff\xb0\xdb\x37\x6c\x3b\x00\x00\x00")

func apiSchemaTypeVerifytokenresultGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_apiSchemaTypeVerifytokenresultGraphql,
		"api/schema/type/VerifyTokenResult.graphql",
	)
}

func apiSchemaTypeVerifytokenresultGraphql() (*asset, error) {
	bytes, err := apiSchemaTypeVerifytokenresultGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/schema/type/VerifyTokenResult.graphql", size: 59, mode: os.FileMode(436), modTime: time.Unix(1539643621, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api/schema/input/DirectoryCreateInput.graphql": apiSchemaInputDirectorycreateinputGraphql,
	"api/schema/input/DirectoryUpdateInput.graphql": apiSchemaInputDirectoryupdateinputGraphql,
	"api/schema/input/PageCreateInput.graphql": apiSchemaInputPagecreateinputGraphql,
	"api/schema/input/PageFieldCreateInput.graphql": apiSchemaInputPagefieldcreateinputGraphql,
	"api/schema/input/PageFieldRemoveInput.graphql": apiSchemaInputPagefieldremoveinputGraphql,
	"api/schema/input/PageFieldRenameInput.graphql": apiSchemaInputPagefieldrenameinputGraphql,
	"api/schema/input/PageFieldUpdate2Input.graphql": apiSchemaInputPagefieldupdate2inputGraphql,
	"api/schema/input/PageFieldUpdate2InputPartial.graphql": apiSchemaInputPagefieldupdate2inputpartialGraphql,
	"api/schema/input/PageFieldUpdateInput.graphql": apiSchemaInputPagefieldupdateinputGraphql,
	"api/schema/input/PageUpdateInput.graphql": apiSchemaInputPageupdateinputGraphql,
	"api/schema/input/TemplateCreateInput.graphql": apiSchemaInputTemplatecreateinputGraphql,
	"api/schema/input/TemplateFieldCreateInput.graphql": apiSchemaInputTemplatefieldcreateinputGraphql,
	"api/schema/input/TemplateFieldRemoveInput.graphql": apiSchemaInputTemplatefieldremoveinputGraphql,
	"api/schema/input/TemplateUpdateInput.graphql": apiSchemaInputTemplateupdateinputGraphql,
	"api/schema/input/UserCreateInput.graphql": apiSchemaInputUsercreateinputGraphql,
	"api/schema/input/UserUpdateInput.graphql": apiSchemaInputUserupdateinputGraphql,
	"api/schema/mutation.graphql": apiSchemaMutationGraphql,
	"api/schema/query.graphql": apiSchemaQueryGraphql,
	"api/schema/schema.graphql": apiSchemaSchemaGraphql,
	"api/schema/type/Directory.graphql": apiSchemaTypeDirectoryGraphql,
	"api/schema/type/LoginResult.graphql": apiSchemaTypeLoginresultGraphql,
	"api/schema/type/Page.graphql": apiSchemaTypePageGraphql,
	"api/schema/type/PageField.graphql": apiSchemaTypePagefieldGraphql,
	"api/schema/type/PageFieldOperationResult.graphql": apiSchemaTypePagefieldoperationresultGraphql,
	"api/schema/type/PageOperationResult.graphql": apiSchemaTypePageoperationresultGraphql,
	"api/schema/type/PageRemoveResult.graphql": apiSchemaTypePageremoveresultGraphql,
	"api/schema/type/Template.graphql": apiSchemaTypeTemplateGraphql,
	"api/schema/type/TemplateField.graphql": apiSchemaTypeTemplatefieldGraphql,
	"api/schema/type/TemplateRemoveResult.graphql": apiSchemaTypeTemplateremoveresultGraphql,
	"api/schema/type/TemplateUpdateResult.graphql": apiSchemaTypeTemplateupdateresultGraphql,
	"api/schema/type/User.graphql": apiSchemaTypeUserGraphql,
	"api/schema/type/UserError.graphql": apiSchemaTypeUsererrorGraphql,
	"api/schema/type/UserOperationResult.graphql": apiSchemaTypeUseroperationresultGraphql,
	"api/schema/type/UserRemoveResult.graphql": apiSchemaTypeUserremoveresultGraphql,
	"api/schema/type/VerifyTokenResult.graphql": apiSchemaTypeVerifytokenresultGraphql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"api": &bintree{nil, map[string]*bintree{
		"schema": &bintree{nil, map[string]*bintree{
			"input": &bintree{nil, map[string]*bintree{
				"DirectoryCreateInput.graphql": &bintree{apiSchemaInputDirectorycreateinputGraphql, map[string]*bintree{}},
				"DirectoryUpdateInput.graphql": &bintree{apiSchemaInputDirectoryupdateinputGraphql, map[string]*bintree{}},
				"PageCreateInput.graphql": &bintree{apiSchemaInputPagecreateinputGraphql, map[string]*bintree{}},
				"PageFieldCreateInput.graphql": &bintree{apiSchemaInputPagefieldcreateinputGraphql, map[string]*bintree{}},
				"PageFieldRemoveInput.graphql": &bintree{apiSchemaInputPagefieldremoveinputGraphql, map[string]*bintree{}},
				"PageFieldRenameInput.graphql": &bintree{apiSchemaInputPagefieldrenameinputGraphql, map[string]*bintree{}},
				"PageFieldUpdate2Input.graphql": &bintree{apiSchemaInputPagefieldupdate2inputGraphql, map[string]*bintree{}},
				"PageFieldUpdate2InputPartial.graphql": &bintree{apiSchemaInputPagefieldupdate2inputpartialGraphql, map[string]*bintree{}},
				"PageFieldUpdateInput.graphql": &bintree{apiSchemaInputPagefieldupdateinputGraphql, map[string]*bintree{}},
				"PageUpdateInput.graphql": &bintree{apiSchemaInputPageupdateinputGraphql, map[string]*bintree{}},
				"TemplateCreateInput.graphql": &bintree{apiSchemaInputTemplatecreateinputGraphql, map[string]*bintree{}},
				"TemplateFieldCreateInput.graphql": &bintree{apiSchemaInputTemplatefieldcreateinputGraphql, map[string]*bintree{}},
				"TemplateFieldRemoveInput.graphql": &bintree{apiSchemaInputTemplatefieldremoveinputGraphql, map[string]*bintree{}},
				"TemplateUpdateInput.graphql": &bintree{apiSchemaInputTemplateupdateinputGraphql, map[string]*bintree{}},
				"UserCreateInput.graphql": &bintree{apiSchemaInputUsercreateinputGraphql, map[string]*bintree{}},
				"UserUpdateInput.graphql": &bintree{apiSchemaInputUserupdateinputGraphql, map[string]*bintree{}},
			}},
			"mutation.graphql": &bintree{apiSchemaMutationGraphql, map[string]*bintree{}},
			"query.graphql": &bintree{apiSchemaQueryGraphql, map[string]*bintree{}},
			"schema.graphql": &bintree{apiSchemaSchemaGraphql, map[string]*bintree{}},
			"type": &bintree{nil, map[string]*bintree{
				"Directory.graphql": &bintree{apiSchemaTypeDirectoryGraphql, map[string]*bintree{}},
				"LoginResult.graphql": &bintree{apiSchemaTypeLoginresultGraphql, map[string]*bintree{}},
				"Page.graphql": &bintree{apiSchemaTypePageGraphql, map[string]*bintree{}},
				"PageField.graphql": &bintree{apiSchemaTypePagefieldGraphql, map[string]*bintree{}},
				"PageFieldOperationResult.graphql": &bintree{apiSchemaTypePagefieldoperationresultGraphql, map[string]*bintree{}},
				"PageOperationResult.graphql": &bintree{apiSchemaTypePageoperationresultGraphql, map[string]*bintree{}},
				"PageRemoveResult.graphql": &bintree{apiSchemaTypePageremoveresultGraphql, map[string]*bintree{}},
				"Template.graphql": &bintree{apiSchemaTypeTemplateGraphql, map[string]*bintree{}},
				"TemplateField.graphql": &bintree{apiSchemaTypeTemplatefieldGraphql, map[string]*bintree{}},
				"TemplateRemoveResult.graphql": &bintree{apiSchemaTypeTemplateremoveresultGraphql, map[string]*bintree{}},
				"TemplateUpdateResult.graphql": &bintree{apiSchemaTypeTemplateupdateresultGraphql, map[string]*bintree{}},
				"User.graphql": &bintree{apiSchemaTypeUserGraphql, map[string]*bintree{}},
				"UserError.graphql": &bintree{apiSchemaTypeUsererrorGraphql, map[string]*bintree{}},
				"UserOperationResult.graphql": &bintree{apiSchemaTypeUseroperationresultGraphql, map[string]*bintree{}},
				"UserRemoveResult.graphql": &bintree{apiSchemaTypeUserremoveresultGraphql, map[string]*bintree{}},
				"VerifyTokenResult.graphql": &bintree{apiSchemaTypeVerifytokenresultGraphql, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

